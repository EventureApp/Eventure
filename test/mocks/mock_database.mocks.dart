// Mocks generated by Mockito 5.4.4 from annotations
// in eventure/test/mocks/mock_database.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;
import 'dart:ui' as _i8;

import 'package:eventure/models/event.dart' as _i4;
import 'package:eventure/models/event_filter.dart' as _i3;
import 'package:eventure/models/user.dart' as _i2;
import 'package:eventure/providers/event_provider.dart' as _i9;
import 'package:eventure/providers/user_provider.dart' as _i5;
import 'package:latlong2/latlong.dart' as _i10;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i7;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeAppUser_0 extends _i1.SmartFake implements _i2.AppUser {
  _FakeAppUser_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEventFilter_1 extends _i1.SmartFake implements _i3.EventFilter {
  _FakeEventFilter_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEvent_2 extends _i1.SmartFake implements _i4.Event {
  _FakeEvent_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [UserProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserProvider extends _i1.Mock implements _i5.UserProvider {
  MockUserProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  set queryStartsWith(String? string) => super.noSuchMethod(
        Invocation.setter(
          #queryStartsWith,
          string,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.AppUser get user => (super.noSuchMethod(
        Invocation.getter(#user),
        returnValue: _FakeAppUser_0(
          this,
          Invocation.getter(#user),
        ),
      ) as _i2.AppUser);

  @override
  List<_i2.AppUser> get friends => (super.noSuchMethod(
        Invocation.getter(#friends),
        returnValue: <_i2.AppUser>[],
      ) as List<_i2.AppUser>);

  @override
  List<_i2.AppUser> get users => (super.noSuchMethod(
        Invocation.getter(#users),
        returnValue: <_i2.AppUser>[],
      ) as List<_i2.AppUser>);

  @override
  List<_i2.AppUser> get usersStartingWith => (super.noSuchMethod(
        Invocation.getter(#usersStartingWith),
        returnValue: <_i2.AppUser>[],
      ) as List<_i2.AppUser>);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  void initializeUser() => super.noSuchMethod(
        Invocation.method(
          #initializeUser,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i6.Future<void> getCurrentUser(String? id) => (super.noSuchMethod(
        Invocation.method(
          #getCurrentUser,
          [id],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<_i2.AppUser> getUser(String? id) => (super.noSuchMethod(
        Invocation.method(
          #getUser,
          [id],
        ),
        returnValue: _i6.Future<_i2.AppUser>.value(_FakeAppUser_0(
          this,
          Invocation.method(
            #getUser,
            [id],
          ),
        )),
      ) as _i6.Future<_i2.AppUser>);

  @override
  String getUserName(String? id) => (super.noSuchMethod(
        Invocation.method(
          #getUserName,
          [id],
        ),
        returnValue: _i7.dummyValue<String>(
          this,
          Invocation.method(
            #getUserName,
            [id],
          ),
        ),
      ) as String);

  @override
  _i6.Future<void> updateUser(_i2.AppUser? user) => (super.noSuchMethod(
        Invocation.method(
          #updateUser,
          [user],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> fetchFriends() => (super.noSuchMethod(
        Invocation.method(
          #fetchFriends,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> fetchUsers() => (super.noSuchMethod(
        Invocation.method(
          #fetchUsers,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> fetchUsersStartingWith() => (super.noSuchMethod(
        Invocation.method(
          #fetchUsersStartingWith,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> addUser(_i2.AppUser? user) => (super.noSuchMethod(
        Invocation.method(
          #addUser,
          [user],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  void addListener(_i8.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i8.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [EventProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockEventProvider extends _i1.Mock implements _i9.EventProvider {
  MockEventProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  List<_i4.Event> get events => (super.noSuchMethod(
        Invocation.getter(#events),
        returnValue: <_i4.Event>[],
      ) as List<_i4.Event>);

  @override
  List<_i4.Event> get filteredEvents => (super.noSuchMethod(
        Invocation.getter(#filteredEvents),
        returnValue: <_i4.Event>[],
      ) as List<_i4.Event>);

  @override
  _i3.EventFilter get filter => (super.noSuchMethod(
        Invocation.getter(#filter),
        returnValue: _FakeEventFilter_1(
          this,
          Invocation.getter(#filter),
        ),
      ) as _i3.EventFilter);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.Event getEventFromId(String? id) => (super.noSuchMethod(
        Invocation.method(
          #getEventFromId,
          [id],
        ),
        returnValue: _FakeEvent_2(
          this,
          Invocation.method(
            #getEventFromId,
            [id],
          ),
        ),
      ) as _i4.Event);

  @override
  _i6.Future<void> addEvent(_i4.Event? event) => (super.noSuchMethod(
        Invocation.method(
          #addEvent,
          [event],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  void setSearchString(String? searchString) => super.noSuchMethod(
        Invocation.method(
          #setSearchString,
          [searchString],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setFilter(_i3.EventFilter? filter) => super.noSuchMethod(
        Invocation.method(
          #setFilter,
          [filter],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void resetFilter() => super.noSuchMethod(
        Invocation.method(
          #resetFilter,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void resetLocation(_i10.LatLng? userLocation) => super.noSuchMethod(
        Invocation.method(
          #resetLocation,
          [userLocation],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addListener(_i8.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i8.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
